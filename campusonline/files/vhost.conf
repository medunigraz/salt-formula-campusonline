################################################################################
# Managed by SALT. Do NOT edit manually! All your changes will be lost.        #
################################################################################

<VirtualHost *:80>
  ServerAdmin {{ site.admin }}
  ServerName {{ site.hostname }}

  LogLevel warn
  ErrorLog "/var/log/apache2/error.{{ site.hostname }}.log"

  RewriteEngine on
  RewriteRule ^/(.*)$ https://%{SERVER_NAME}/$1 [R=301,L]
</VirtualHost>
<VirtualHost *:443>
  ServerAdmin {{ site.admin }}
  ServerName {{ site.hostname }}

  LogLevel warn
  DeflateFilterNote ratio
  LogFormat "%h %l %u %t \"%r\" %>s %b (%{ratio}n%%)\"%{Referer}i\" \"%{User-Agent}i\"" campusonline
  CustomLog "/var/log/apache2/access.{{ site.hostname }}.log" campusonline
  ErrorLog "/var/log/apache2/error.{{ site.hostname }}.log"

  TimeOut 155
  KeepAlive On
  MaxKeepAliveRequests 500
  KeepAliveTimeOut 10
  UseCanonicalName On

  <Files ".ht*">
      Require all denied
  </Files>

  RequestHeader unset Proxy early

  AddType application/x-compress .Z
  AddType application/x-gzip .gz .tgz
  AddType application/javascript .js

  <Location /status>
    SetHandler server-status
    Require ip {% for allow in site.proxy.status %}{{ allow }}{% if not loop.last %} {% endif %}{% endfor %}
  </Location>

  ProxyRequests Off
  RewriteEngine on
  Options +FollowSymLinks

  RewriteRule ^/$ /{{ site.proxy.context }}/{{ site.proxy.default }} [R=302,NE,L]

{%- if site.proxy.get('webnav.ini', False) %}
  RewriteRule ^/{{ site.proxy.context }}/webnav.ini {{ site.proxy.get('webnav.ini') }} [R=302,NE,L]
{%- endif %}

  ProxyPass /status !

  <Location /enable-internal-access>
    RewriteRule .* / [L,R=302,CO=developer:true:%{SERVER_NAME}:0:/]
  </Location>

{%- if site.proxy.get('internal-access', False) %}
  <Location /{{ site.proxy.context }}/ee/>
    Require expr %{HTTP_COOKIE} =~ /developer=true/
  </Location>
{%- endif %}

{%- if site.proxy.maintainance is defined %}
  ProxyPass /{{ site.proxy.instance }}/wartung.html !

  ErrorDocument 503 /{{ site.proxy.instance }}/wartung.html

  <Directory {{ site.proxy.maintainance.directory }}/CAMPUSonline>
    Require all granted
  </Directory>

  # Rewrite to local maintainance resources
  RewriteCond {{ site.proxy.maintainance.directory }}/conf/inwartung.{{ site.proxy.context }} -f
  RewriteCond {{ site.proxy.maintainance.directory }}/CAMPUSonline/%{REQUEST_URI} -f
  RewriteRule ^(.*)$ {{ site.proxy.maintainance.directory }}/CAMPUSonline/$1 [L]

  # Rewrite all other requests to 503 error
  RewriteCond expr "! %{HTTP_COOKIE} =~ /developer=true/
  {%- for manager in site.proxy.manager %}
  RewriteCond expr "! -R '{{ manager }}'"
  {%- endfor %}
  RewriteCond {{ site.proxy.maintainance.directory }}/conf/inwartung.{{ site.proxy.context }} -f
  RewriteRule ^/({{ site.proxy.context }}|{{ site.proxy.context }}f|{{ site.proxy.context }}j|reports|fop/co_dp)/ - [R=503,L]
{%- endif %}

  <Location />
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript
    Header append Vary User-Agent
  </Location>

  SetEnvIf Request_URI ^/{{ site.proxy.context }}/pl/ui/(\$ctx.*?)/(.*)$ CTX_INFO=$1

  <LocationMatch /{{ site.proxy.context }}/pl/ui/>
    RequestHeader append Referer %{CTX_INFO}e
  </LocationMatch>

  ProxyPassMatch   "^/{{ site.proxy.context }}/pl/ui/(\$ctx.*?)/pages/(.*)$" "{{ site.proxy.services.co_ee }}/co_ee_ws/rest/pages/$2"
  ProxyPassReverse "^/{{ site.proxy.context }}/pl/ui/(\$ctx.*?)/pages/(.*)$" "{{ site.proxy.services.co_ee }}/co_ee_ws/rest/pages/$2"

  ProxyPass        /{{ site.proxy.context }}/pages/ {{ site.proxy.services.co_ee }}/co_ee_ws/rest/pages/
  ProxyPassReverse /{{ site.proxy.context }}/pages/ {{ site.proxy.services.co_ee }}/co_ee_ws/rest/pages/

  ProxyPassMatch "^/{{ site.proxy.context }}/pl/ui/(\$ctx.*?)/(.*)$" "{{ site.proxy.services.ohs }}/{{ site.proxy.context }}/$2"
  <LocationMatch /{{ site.proxy.context }}/pl/rest/>
    SetEnvIfNoCase X-HTTP-Method-Override ^(put|options|delete)$ HAVE_METHOD_OVERRIDE=$1
    RequestHeader append Referer $method=%{HAVE_METHOD_OVERRIDE}e env=HAVE_METHOD_OVERRIDE
  </LocationMatch>

  ProxyPass        /{{ site.proxy.context }}/pl/rest/ {{ site.proxy.services.ohs }}/{{ site.proxy.context }}/!rest/
  ProxyPassReverse /{{ site.proxy.context }}/pl/rest/ {{ site.proxy.services.ohs }}/{{ site.proxy.context }}/!rest/

  ProxyPass        /{{ site.proxy.context }}/ee/ui/ca2/ {{ site.proxy.services.co_ee }}/co_ee_client_ca2/
  ProxyPassReverse /{{ site.proxy.context }}/ee/ui/ca2/ {{ site.proxy.services.co_ee }}/co_ee_client_ca2/

  ProxyPass        /{{ site.proxy.context }}/ee/theme/ca2/ {{ site.proxy.services.ohs }}/{{ site.proxy.instance }}/theme/
  ProxyPassReverse /{{ site.proxy.context }}/ee/theme/ca2/ {{ site.proxy.services.ohs }}/{{ site.proxy.instance }}/theme/

  ProxyPass        /{{ site.proxy.context }}/ee/ {{ site.proxy.services.co_ee }}/co_ee_ws/
  ProxyPassReverse /{{ site.proxy.context }}/ee/ {{ site.proxy.services.co_ee }}/co_ee_ws/

  ProxyPass        /{{ site.proxy.context }}/pl/img {{ site.proxy.services.ohs }}/{{ site.proxy.instance }}/img
  ProxyPassReverse /{{ site.proxy.context }}/pl/img {{ site.proxy.services.ohs }}/{{ site.proxy.instance }}/img

  {% if site.proxy.services.dp is defined %}
  <Location "/{{ site.proxy.context }}/dp/">
    Require host {% for host in site.database.hosts %}{{ host }}{% if not loop.last %} {% endif %}{% endfor %}
  </Location>
  ProxyPass "/{{ site.proxy.context }}/dp/" "{{ site.proxy.services.dp }}/"
  ProxyPassReverse "/{{ site.proxy.context }}/dp/" "{{ site.proxy.services.dp }}/"
  {% endif %}

  <Location "/fop/co_dp/">
    Require host {% for host in site.database.hosts %}{{ host }}{% if not loop.last %} {% endif %}{% endfor %}
  </Location>
  ProxyPass "/fop/co_dp/" "{{ site.proxy.services.co_dp }}/"
  ProxyPassReverse "/fop/co_dp/" "{{ site.proxy.services.co_dp }}/"

  <Location "/reports/">
    Require host {% for host in site.database.hosts %}{{ host }}{% if not loop.last %} {% endif %}{% endfor %}
  </Location>
  ProxyPass "/reports/" "{{ site.proxy.services.reports }}/reports/"
  ProxyPassReverse "/reports/" "{{ site.proxy.services.reports }}/reports/"

  ProxyPass "/{{ site.proxy.context }}j/ws/" "{{ site.proxy.services.co_ws }}/ws/"
  ProxyPassReverse "/{{ site.proxy.context }}j/ws/" "{{ site.proxy.services.co_ws }}/ws/"

  ProxyPass "/{{ site.proxy.context }}f/" "{{ site.proxy.services.reports }}/{{ site.proxy.context }}f/"
  ProxyPassReverse "/{{ site.proxy.context }}f/" "{{ site.proxy.services.reports }}/{{ site.proxy.context }}f/"

  ProxyPass "/" "{{ site.proxy.services.ohs }}/" timeout=600 Keepalive=On
  ProxyPassReverse "/" ""{{ site.proxy.services.ohs }}/"

  {% if site.proxy.services.coinst is defined %}
  SSLProxyEngine on
  SSLProxyCheckPeerCN off
  <Location /coinst>
    Require host {% for host in site.database.hosts %}{{ host }}{% if not loop.last %} {% endif %}{% endfor %}
    ProxyPass {{ site.proxy.services.coinst }}
    ProxyPassReverse {{ site.proxy.services.coinst }}
  </Location>
  {% endif %}

  <FilesMatch "\.(gif|png|css|js|jpe?g)$">
    ExpiresActive on
    ExpiresDefault "access plus 7 days"
  </FilesMatch>

  Header edit Set-Cookie ^(.*)$ $1;Secure;HttpOnly

  SSLEngine on

  SSLProtocol All -SSLv2 -SSLv3
  SSLCipherSuite EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH

  SSLCertificateFile "{{ proxy.tls.public }}/{{ site.hostname }}.pem"
  SSLCertificateKeyFile "{{ proxy.tls.private }}/{{ site.hostname }}.pem"
  SSLCertificateChainFile "{{ proxy.tls.public }}/{{ site.hostname }}.chain.pem"

  Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains;"
  Header always set X-XSS-Protection "1; mode=block"
  Header always set X-Content-Type-Options "nosniff"

  #SetEnvIf Referer "^(https?:\/\/(?:.*\.)?{{ site.hostname | regex_replace('^(?:\w+\.)?(?P<domain>\w+)\.(?P<tld>\w+)$', '\\g<domain>\\.\\g<tld>') }})/.*" X_FRAME_OPTIONS_ALLOWED=$1
  #SetEnvIf Referer "^(https?:\/\/(?:.*\.)?medunigraz\.at)/.*" X_FRAME_OPTIONS_ALLOWED=$1
  #Header set X-Frame-Options DENY env=!X_FRAME_OPTIONS_ALLOWED
  #Header set X-Frame-Options "ALLOW-FROM %{X_FRAME_OPTIONS_ALLOWED}e" env=X_FRAME_OPTIONS_ALLOWED

</VirtualHost>
